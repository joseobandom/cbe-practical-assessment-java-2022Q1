plugins {
    id "jacoco"
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.sonarqube" version "3.0"
	id 'java'
}

group = 'com.pichincha.prueba'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'junit:junit:4.13.1'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'javax.ws.rs:javax.ws.rs-api:2.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test {
    jvmArgs = ["--add-modules", "java.se", "--add-exports", "java.base/jdk.internal.ref=ALL-UNNAMED", "--add-opens", "java.base/java.lang=ALL-UNNAMED", "--add-opens", "java.base/java.nio=ALL-UNNAMED", "--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED", "--add-opens", "java.management/sun.management=ALL-UNNAMED", "--add-opens", "jdk.management/com.sun.management.internal=ALL-UNNAMED"]
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

sonarqube {
    properties {
        property 'sonar.projectName', 'tienda'
        property "sonar.test.exclusions" , "**src/test/**/*.* "
	    property "sonar.exclusions", "**/error/*.java, **/dto/*.java, **/ServletInitializer.java, **/Application.java, src/test/**/*.*, "
		property 'sonar.coverage.exclusions', "src/test/**/*.*,  **/ServletInitializer.java,  **/TiendaApplication.java, **/dto/**/*.java, **/infrastructure/**/*.java, **/exceptions/**/*.java, **/useful/**/*.java  "

    }
}

subprojects {
    sonarqube {
        properties {
            property "sonar.sources", "src"
        }
    }
}

tasks.named('sonarqube').configure {
    dependsOn test
}
